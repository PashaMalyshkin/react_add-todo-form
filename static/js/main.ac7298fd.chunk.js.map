{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","userId","usersFromServer","find","App","useState","handleTitle","userName","handleOption","visibleTodos","setTodos","titleIsValid","setTitle","userNameIsValid","setUsername","action","method","onSubmit","event","preventDefault","newTodoId","sort","a","b","reverse","newUser","newTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac7298fd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nconst todos = todosFromServer.map((todo) => {\n  return {\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId) || null,\n  };\n});\n\nexport const App = () => {\n  const [title, handleTitle] = useState('');\n  const [userName, handleOption] = useState('');\n  const [visibleTodos, setTodos] = useState(todos);\n  const [titleIsValid, setTitle] = useState(true);\n  const [userNameIsValid, setUsername] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (title && userName) {\n            const newTodoId = [...visibleTodos]\n              .sort((a, b) => a.id - b.id).reverse()[0].id;\n            const newUser = usersFromServer\n              .find(user => user.name === userName) || null;\n            const newTodo: Todo = {\n              id: newTodoId + 1,\n              title,\n              completed: false,\n              userId: newUser?.id || 0,\n              user: newUser,\n            };\n\n            setTodos([\n              ...visibleTodos,\n              newTodo,\n            ]);\n\n            handleTitle('');\n            handleOption('');\n          }\n\n          if (!title) {\n            setTitle(false);\n          }\n\n          if (!userName) {\n            setUsername(false);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setTitle(true);\n              handleTitle(value);\n            }}\n          />\n\n          {!titleIsValid && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userName}\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setUsername(true);\n              handleOption(value);\n            }}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {!userNameIsValid\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}